import os
import pandas as pd
import numpy as np
from pathlib import Path

# Internal imports
import save
import utils
import logging
from BlockSim.Main import blocksim

def simulator(dir_results, model, input_file, runs, variants_by_module):

    simulator_directory = save.create_simulator_directory(
        root_directory=dir_results
    )

    output_blocksim = simulator_directory / f"blocksim-model-{model}-{runs}x.csv"

    # Set environment variable for BlockSim model before importing the simulator
    os.environ['BLOCKSIM_MODEL'] = str(model)

    logging.info(f"\nBlockSim run model {model}...\n")

    blocksim(input_file=input_file, output_file=str(output_blocksim), runs=runs)
    
    try:
        df = pd.read_csv(output_blocksim)
        
    except FileNotFoundError as e:
        logging.error(f"Error: {e}")
        return

    df_simulator_mean_std = utils.compute_mean_std(
        df=df, 
        group_by='variant',
        columns=["verify"],
    )

    logging.info("\nFiles generated by simulations in BlockSim:")
    path_csv = simulator_directory / f"blocksim-model-{model}-mean-std.csv"
    df_simulator_mean_std.to_csv(path_csv, index=False)
    logging.info(output_blocksim)
    logging.info(path_csv)
    
    return str(path_csv)
