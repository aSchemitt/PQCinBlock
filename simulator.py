import os
import pandas as pd
import numpy as np
from pathlib import Path
import sys
import logging
import shutil

# Internal imports
import save
import utils 
from simulator_config import simulator_config

MODELS={}
MODELS[1]="Bitcoin"
MODELS[2]="Ethereum"

CONFIG_PATH="./BlockSim/InputsConfig.py"


def simulator(results_dir, model, input_file, runs, variants_by_module):

    simulator_directory = save.create_simulator_directory(
        root_directory=results_dir
    )

    output_blocksim = simulator_directory / f"blocksim-model-{model}-{runs}x.csv"

    logging.info("")
    logging.info(f"BlockSim run model {model} ({MODELS[model]})")
        
    with open(CONFIG_PATH, "w", encoding="utf-8") as f:
        f.write(simulator_config(model, runs))
    
    copyfile = simulator_directory / f"InputsConfig{model}.py"

    shutil.copy2(CONFIG_PATH, copyfile)

    logging.info("")
    logging.info(f"\tBlockSim configuration file ready in: {CONFIG_PATH}")
    logging.info("")

    utils.run_cmd(f"python -m BlockSim.Main {input_file} {output_blocksim}")
    
    try:
        df = pd.read_csv(output_blocksim)
        
    except FileNotFoundError as e:
        logging.error(f"Error: {e}")
        sys.exit(-1)
        
    df_simulator_mean_std = utils.compute_mean_std(
        df=df, 
        group_by='variant',
        columns=["verify"],
    )
    
    logging.info("")
    logging.info("Files generated by simulations:")
    path_csv = simulator_directory / f"blocksim-model-{model}-mean-std.csv"
    df_simulator_mean_std.to_csv(path_csv, index=False)
    logging.info(f"\t{output_blocksim}")
    logging.info(f"\t{path_csv}")
    
    return path_csv
